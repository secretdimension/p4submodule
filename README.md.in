<!---
DO NOTE EDIT README.MD! Edit README.md.in instead.
-->

# p4submodule

A tool for managing git repositories inside of Perforce depots.

This tool was built for managing Unreal Engine plugins that are distributed via GitHub, but it may have other uses as well.

## Installation

1. Ensure you have python3 & [pipx](https://github.com/pypa/pipx) installed
2. Run `pipx install p4submodule`
3. Tada!

## CLI Documentation
{% for command in commands if not command.command.hidden %}

### {{ command.info_name }}

{{ command.command.help|dedent|trim if command.command.help }}

> {{ command.get_usage() }}
{% for param in command.command.params %}
{% set param_help = param.get_help_record(command) %}
{% if param_help %}

`{{ param_help[0] }}`{{ ' (Defaults to `%s`)' | format(param.default) if param.default }}: {{ param_help[1] }}
{% endif %}
{% endfor %}

{% endfor %}

## `submodule.toml` Format

Editing this file by hand should _not_ be required, as all modifications should be covered by the above commands.

### `submodule.[NAME]` sections (optional) (NAME default: file directory name)

You may use this section to optionally define multiple submodules in the same file.
Example:
```toml
[Submodule.ModuleA]
...
[Submodule.ModuleB]
...
```

### `path` (optional) (default: file directory)

You may use this field to specify the path to the git repository checkout root.

### `remote`

The path to the git remote to checkout/clone from.

### `tracking`

The remote branch to track when updating.

### `current_ref`

The OID of the git commit currently in use by the submodule.
